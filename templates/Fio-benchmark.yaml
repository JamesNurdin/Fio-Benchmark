{{- range $index, $nodeName := $.Values.nodes }}
---
apiVersion: v1
kind: Pod
metadata:
  name: fio-bench-{{ $nodeName }}-{{ $.Values.run_name }}
  namespace: pgr24james
  labels:
    benchmark: fio-readonly
spec:
  serviceAccountName: containerroot
  serviceAccount: containerroot
  imagePullSecrets:
    - name: containerroot-dockercfg-qrptl
  securityContext:
    seLinuxOptions:
      level: 's0:c29,c14'
    runAsUser: 0
  nodeName: {{ $nodeName }}           # Pin to specific node (optional)
  restartPolicy: Never
  volumes:
    - name: fio-data
      {{- if $.Values.useEmptyDir }}
      emptyDir: {}
      {{- else }}
      persistentVolumeClaim:
        claimName: {{ $.Values.fioPvcName }}
      {{- end }}
    - name: primary
      persistentVolumeClaim:
        claimName: pgr24jamesvol1claim
    - name: empty-directory
      emptyDir: {}

  initContainers:
    - name: prefill
      image: docker.io/xridge/fio:latest
      imagePullPolicy: IfNotPresent
      command:
        - /bin/sh
        - -c
        - |
          set -e
          if [ -d /mnt/fio-test/{{$.Values.dataDir}} ] && [ "$(ls -A /mnt/fio-test/{{$.Values.dataDir}} 2>/dev/null)" ]; then
            echo "[prefill] Data already present – skipping generation."
          else
            echo "[prefill] No data found – generating {{$.Values.fileSize}}B test file..."
            mkdir -p /mnt/fio-test/{{$.Values.dataDir}}
            fio --name=fill \
                --directory=/mnt/fio-test/{{$.Values.dataDir}} \
                --rw=write --bs=1M \
                --size={{$.Values.fileSize}} --filesize={{$.Values.fileSize}} \
                --iodepth=32 --numjobs=1 --direct=1 \
                --output-format=json
          fi
      volumeMounts:
        - name: fio-data
          mountPath: /mnt/fio-test
      resources:
        requests:
          cpu: "4"
          memory: "10Gi"
        limits:
          cpu: "4"
          memory: "10Gi"
      securityContext:
        capabilities:
          drop: ["MKNOD"]

  containers:
    - name: host-ceph-stats
      env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
      ports:
        - containerPort: 8001
      image: macavaney/idabox:py310-v105  # Lightweight container for testing
      command: [
        "/bin/sh",
        "-c",
        "cd /mnt/primary/Mini-project/Apache/System/Probe/node_only",
        "python net_exporter.py"
      ]
      volumeMounts:
        - name: primary
          mountPath: /mnt/primary
      resources:
        requests:
          cpu: "1"
          memory: "1Gi"
        limits:
          cpu: "1"
          memory: "1Gi"
      securityContext:
        capabilities:
          drop:
            - MKNOD
        imagePullPolicy: IfNotPresent
    - name: fio
      image: macavaney/idabox:py310-v105
      imagePullPolicy: IfNotPresent
      env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
      command:
        - /bin/sh
        - -c
        - |
          set -e
          apt install fio -y
          for iter in $(seq 1 {{ $.Values.iterations }}); do
            echo "### iteration $iter on ${NODE_NAME} $(date)"
            python /mnt/primary/Mini-project/Apache/System/Node_Benchmarks/benchmark.py \
              --node ${NODE_NAME} \
              --job_name {{ $.Values.run_name }} \
              --data_dir {{ $.Values.dataDir }} \
              --result_dir {{ $.Values.run_name }} \
              --filename throughput-result-${iter}
          done
      volumeMounts:
        - name: fio-data
          mountPath: /mnt/fio-test
        - name: primary
          mountPath: /mnt/primary/

      resources:
        requests:
          cpu: "4"
          memory: "10Gi"
        limits:
          cpu: "4"
          memory: "10Gi"
      securityContext:
        capabilities:
          drop: ["MKNOD"]
{{- end }}
